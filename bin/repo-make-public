#!/bin/sh

# Make a remote repository on remote host and setup a github mirror
# Usage:
# repo-make-public repo "description"

set -e

REPO="$1"
DESCRIPTION="$2"
REMOTE_HOST="repos"
REMOTE_REPO_DIR="webapps/erratique/repos"
ORIGINBASEURI="http://erratique.ch/repos"
DEPLOYKEYNAME="erratique sync"
EMAIL="daniel.buenzli@erratique.ch"
GHUSER="dbuenzli"

if [ "$REPO" == "" ]; then 
    echo "You need to specify a repo as the first argument."
    exit 1
fi

# We make a bare repo by cloning the original $REPO, remove it's remote
# and copy it to $REMOTE_HOST:$REMOTE_REPO_DIR and addits description to cgit.
# We then move the original $REPO to $REPO.old, remove the local bare and 
# clone back the remote repo through ssh.

echo "Making remote bare repo."
git clone --bare $REPO $REPO.git
echo "$DESCRIPTION" > $REPO.git/description
git --git-dir $REPO.git remote rm origin 
scp -r $REPO.git $REMOTE_HOST:$REMOTE_REPO_DIR/
ssh $REMOTE_HOST git --git-dir $REMOTE_REPO_DIR/$REPO.git update-server-info

echo "Adding repo to cgit" 
ssh $REMOTE_HOST "cat <<EOF >> $REMOTE_REPO_DIR/cgitrc

repo.url=$REPO
repo.desc=$DESCRIPTION
repo.clone-url=$ORIGINBASEURI/$REPO.git
repo.path=$REPO.git
repo.logo-link=$ORIGINBASEURI/$REPO
EOF"

echo "Moving original repo to $REPO.old."
mv $REPO $REPO.old
rm -rf $REPO.git # that's the bare 

echo "Cloning back remote repo to $REPO through ssh."
git clone $REMOTE_HOST:$REMOTE_REPO_DIR/$REPO.git

# We generate a new deploy key locally and upload via ssh to $REMOTE_HOST, we
# update the .ssh/config file there for the remote repo's post receive
# hook to work. Locally we just keep it.

echo "Generating deploy key locally and transfering to remote."

ssh-keygen -t rsa -C "$EMAIL" -N '' -f ~/.ssh/"$REPO"_rsa
scp ~/.ssh/"$REPO"_rsa* $REMOTE_HOST:.ssh/

echo "Updating remote ssh config."
ssh $REMOTE_HOST "cat <<EOF >> .ssh/config

Host=github_"$REPO"
Hostname=github.com
User=git
IdentityFile= ~/.ssh/"$REPO"_rsa
EOF"

# Create github repository and add deploy key
# Couldn't make cookies to work, need to authenticate twice.

echo "Creating gihub repo. Authenticate with your github password."

GH_CREATE=$(cat <<EOF
{"name":"$REPO",
 "description":"$DESCRIPTION",
 "homepage":"$ORIGINBASEURI/$REPO",
 "has_wiki":"false"}
EOF
)
curl -u $GHUSER https://api.github.com/user/repos \
     -d "$GH_CREATE"

echo "Adding deploy key to github repo. Authenticate again to github."

PUBKEY=$(cat ~/.ssh/"$REPO"_rsa.pub)
GH_DEPLOY_KEY=$(cat <<EOF
{"title":"$DEPLOYKEYNAME",
 "key":"$PUBKEY"}
EOF
)
curl -u $GHUSER https://api.github.com/repos/$GHUSER/$REPO/keys \
     -d "$GH_DEPLOY_KEY"

# Add github remote as a mirror on the remote repo, add post-receive
# hook that pushes to github

echo "Adding github remote to remote repository and syncing to github."

ssh $REMOTE_HOST git --git-dir $REMOTE_REPO_DIR/$REPO.git remote add \
    --mirror github github_$REPO:$GHUSER/$REPO.git

ssh $REMOTE_HOST git --git-dir $REMOTE_REPO_DIR/$REPO.git push \
    -f --mirror github 

echo "Installing post-receive hook for github syncing on remote repo."

ssh $REMOTE_HOST "cat <<EOF > $REMOTE_REPO_DIR/$REPO.git/hooks/post-receive 
#!/bin/sh
git update-server-info
git push -f --mirror --quiet github
EOF"

ssh $REMOTE_HOST chmod +x $REMOTE_REPO_DIR/$REPO.git/hooks/post-receive

echo "Finished."
echo "Old repo is now '$REPO.old' don't forget to copy potentially"
echo "ignored files to '$REPO'"





